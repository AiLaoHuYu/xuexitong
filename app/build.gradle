import java.text.SimpleDateFormat

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

def getDate() {
    return Integer.parseInt(new SimpleDateFormat("yyMMdd").format(new Date()))
}

def verCode = 1
def verName = "1000"
def versionPropsFile = file('../version.properties')
if (versionPropsFile.canRead()) {
    //载入version.properties
    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    //从version.properties根据关键字"VERSION_CODE"取Integer
    verCode = versionProps['VERSION_CODE'].toInteger()
    //判断build模式,如果是特定模式
    // 则自增版本号,并且写回version.properties文件中
    def runTasks = gradle.startParameter.taskNames
    //根据实际情况进行处理
    if ('assembleRelease' in runTasks || 'assembleDebugTest' in runTasks) {
        //版本号自增并写入版本控制文件
        versionProps['VERSION_CODE'] = (++verCode).toString()
        verName = versionProps['VERSION_CODE'].toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    }
} else {
    throw new GradleException("Could not find version.properties!")
}

def getCurrentTime() {
    return new Date().format("yyyy-MM-dd_HH-mm", TimeZone.getTimeZone("GMT+8"))
}

android {
    compileSdkVersion 28


    signingConfigs {
        release {
            keyAlias 'qqkey'
            keyPassword '123456'
            storeFile file('../qq.keystore')
            storePassword '123456'
        }
    }

    defaultConfig {
        applicationId "com.qq.xuexitong"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode verCode
        versionName verName

        signingConfig signingConfigs.release

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding{
        enabled true
    }

    android.applicationVariants.all { variant ->
        variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
            apkData.outputFileName = "xuexitong-${defaultConfig.versionName}_${variant.buildType.name}_${getCurrentTime()}.apk"
        }
    }

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.0.0'
//    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'com.github.bumptech.glide:glide:4.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.3'
    implementation 'com.google.code.gson:gson:2.8.5'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
}